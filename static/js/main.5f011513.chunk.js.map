{"version":3,"sources":["methods/methodMapping.ts","pages/GenericWallet.tsx","pages/Transport.tsx","App.tsx","index.tsx","transports/connection.ts","lib/near.ts","lib/reqSign.ts","transports/NearWebTransport.ts"],"names":["transport","transportWindow","config","frontendURI","makeSignedIn","contractId","a","retries","signedIn","env","getEnvironment","getWallet","wallet","isSignedIn","methods","method","walletSignIn","desc","Message","styled","div","MessageContainer","genericSigner","params","copyParams","attachedDeposit","gas","account","functionCall","args","methodName","BN","WalletRequest","location","useLocation","useState","setMethod","setMethodName","setContractId","setParams","count","setCount","total","setTotal","result","setResult","txHash","setTxHash","useEffect","window","addEventListener","event","origin","message","JSON","parse","data","mthd","e","setTimeout","res","callMethod","parsedUrl","qs","search","ignoreQueryPrefix","parseUrl","opener","transactionHashes","successMessage","stringify","success","value","postMessage","public_key","failMessage","failure","errorCode","errorMessage","verifyTxOrAuthorization","internalID","methodMapping","connect","uri","console","log","NearWebTransport","sendData","Error","request","sendResponse","close","messageHandler","ev","error","source","jsonrpc","openrpcDocument","id","code","then","results","catch","Transport","initTransport","removeEventListener","App","basename","process","path","element","GenericWallet","ReactDOM","render","document","getElementById","defaultConfigs","mainnet","networkId","nodeUrl","walletUrl","helperUrl","testnet","getConnectionConfig","entry","getNear","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","headers","nearConnection","isValidContractId","length","endsWith","split","getWalletConnection","near","appKey","WalletConnection","contractName","requestSignIn","getAccountId","prevWindow","createSigningWindowFunc","req","parentPath","checkMessage","_m","shouldOpenWindow","prom","Promise","resolve","reject","listener","undefined","warn","w","open","getContractId","cfg","Near","this","url","URL","alert","timeout","base64Args","Buffer","from","toString","blockQuery","finality","encodedReq","request_type","account_id","method_name","args_base64","httpTransport","HTTPTransport","requestManager","RequestManager","rpcClient","Client","reqResult","Object","assign","rs"],"mappings":"mMASIA,EAEAC,E,6ICGEC,EAAS,CACbC,YAHmC,yBA+B/BC,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACfC,EAAU,EACVC,GAAW,EAFI,WAGbD,KAAcC,EAHD,wBAIXC,EAAMC,YAAeL,GAJV,SAMIM,YAAUF,EAAIJ,GANlB,OAMXO,EANW,OASjBJ,EAAWI,EAAOC,aATD,gDAWZL,GAAYD,EAAU,GAXV,4CAAH,sDAoBZO,EAAgC,CACpC,aAAgB,CAACC,OARD,uCAAG,WAAOV,GAAP,iBAAAC,EAAA,6DAEbG,EAAMC,YAAeL,GAFR,SAIEM,YAAUF,EAAIJ,GAJhB,cAIbO,EAJa,yBAKZI,YAAaJ,EAAOP,EAAYA,IALpB,2CAAH,sDAQuBY,KAAM,uBAIzCC,EAAUC,IAAOC,IAAV,wIAOPC,EAAmBF,IAAOC,IAAV,gGAMhBE,EAAa,uCAAE,WAAOP,EAAeQ,EAAalB,GAAnC,uBAAAC,EAAA,6DAEbG,EAAMC,YAAeL,GAFR,SAIEM,YAAUF,GAJZ,cAIbG,EAJa,OAKbY,EALa,eAKID,UAGhBA,EAAOE,uBAEPF,EAAOG,IAGRD,EAAkBD,EAAWC,iBAAmB,IAChDC,EAAMF,EAAWE,KAAO,UAdX,UAebd,EAAOe,UAAUC,aAAa,CAACC,KAAKN,EACxClB,aACAyB,WAAYf,EACZU,gBAAiB,IAAIM,IAAGN,GACxBC,IAAK,IAAIK,IAAGL,KAnBK,4CAAF,0DA8HJM,EAvGgC,WAC7C,IAAMC,EAAWC,cAEjB,EAA4BC,qBAA5B,mBAAOpB,EAAP,KAAeqB,EAAf,KACA,EAAoCD,mBAAiB,IAArD,mBAAOL,EAAP,KAAmBO,EAAnB,KACA,EAAoCF,mBAAiB,IAArD,mBAAO9B,EAAP,KAAmBiC,EAAnB,KACA,EAA4BH,qBAA5B,mBAAOZ,EAAP,KAAegB,EAAf,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA4BR,qBAA5B,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BV,qBAA5B,mBAAOW,EAAP,KAAeC,EAAf,KAqFA,OAzDAC,qBAAU,WAxBRC,OAAOC,iBACL,WACA,SAACC,GACC,GAAGA,EAAMC,SAAWlD,EAAOC,YACzB,IACE,IAAMkD,EAAuBC,KAAKC,MAAMJ,EAAMK,MAC9C,GAAGH,EAAQtC,OAAO,CAChB,IAAM0C,EAAO3C,EAAQuC,EAAQtC,QAAUD,EAAQuC,EAAQtC,QAAU,CAACA,OAAQ,kBAAI,GAAME,KAAK,IACzFsB,EAAUc,EAAQ9B,QAClBa,EAAUqB,GACVnB,EAAce,EAAQhD,YACtBgC,EAAcgB,EAAQtC,QACtB0B,EAASY,EAAQb,OACjBG,EAASU,EAAQX,QAEpB,MAAMgB,QAKX,KAMF,IAEFV,qBAAU,WAAM,4CACd,sBAAA1C,EAAA,sDACKkC,GAASE,GAAS3B,GAAUQ,GAC7BoC,WAAU,sBAAC,4BAAArD,EAAA,0DAELiB,EAAeE,kBAAoBF,EAAeG,IAF7C,gCAGKJ,EAAcQ,EAAWP,EAAQlB,GAHtC,OAGPuD,EAHO,6CAMK7C,EAAOA,OAAOV,GANnB,OAMPuD,EANO,cASTf,EAAUe,GATD,4CAUR,MAZP,4CADc,uBAAC,WAAD,wBAgBdC,MAGFb,qBAAU,WAAI,4CAEZ,sCAAA1C,EAAA,yDAEQwD,EADW,kBAAqBC,IAAGR,MAAMtB,EAAS+B,OAAQ,CAAEC,mBAAmB,IACnEC,GAEfjB,OAAOkB,SAAWlB,QAA4B,OAAlBA,OAAOkB,SAAmBL,EAAUM,kBAJrE,oBAOOtB,EAPP,wDAQIC,EAAUe,EAAUM,mBACdC,EAAiBf,KAAKgB,UAAU,CAACC,QAAST,EAAUM,kBAAmBI,MAAO5B,IACpFK,OAAOkB,OAAOM,YAAYJ,EAAgBnE,EAAOC,aAVrD,6BAcK8C,OAAOkB,SAAWlB,QAA4B,OAAlBA,OAAOkB,SAAmBL,EAAUY,WAdrE,kCAesBtE,EAAaC,GAfnC,eAeUuD,EAfV,SAiBYS,EAAiBf,KAAKgB,UAAU,CAACC,QAAST,EAAUY,WAAYF,MAAOZ,IAC7EX,OAAOkB,OAAOM,YAAYJ,EAAgBnE,EAAOC,eAE3CwE,EAAcrB,KAAKgB,UAAU,CAACM,QAAS,CAAEC,UAAW,KAAMC,aAAc,uBAC9E7B,OAAOkB,OAAOM,YAAYE,EAAazE,EAAOC,cArBpD,2BAyBK8C,OAAOkB,SAAWlB,QAA4B,OAAlBA,OAAOkB,QAAmBL,EAAUe,YAC3DF,EAAcrB,KAAKgB,UAAU,CAACM,QAAS,CAAEC,UAAWf,EAAUe,UAAWC,aAAchB,EAAUgB,gBACvG7B,OAAOkB,OAAOM,YAAYE,EAAazE,EAAOC,cA3BlD,6CAFY,uBAAC,WAAD,wBAgCZ4E,KACC,CAAC9C,EAAS+B,OAAQpB,EAAQG,EAAWD,EAAQzC,IACxC,eAACgB,EAAD,WACLN,GAAU,eAACG,EAAD,iDACYsB,EADZ,OACuBE,EADvB,QACmC3B,GAAUA,EAAOE,SAC7DF,GAAU,cAACG,EAAD,kC,wBDhMZ8D,EAAa,EAsCFC,EANuB,CACpCC,QA7BoB,uCAAG,WAAOC,GAAP,SAAA7E,EAAA,6DACvB8E,QAAQC,IAAI,aACZrF,EAAY,IAAIsF,IAAiBH,GACjCC,QAAQC,IAAR,qBAA0BrF,EAAUK,aAHb,SAICL,EAAUkF,UAJX,cAIvBjF,EAJuB,OAKvBmF,QAAQC,IAAR,oBAAyBrF,EAAUK,aALZ,mBAMhB,GANgB,2CAAH,sDA8BpBkF,SApByB,SAAC/B,GAC1B,IAAKxD,EACH,MAAM,IAAIwF,MAAM,iBAElB,OAAOxF,EAAUuF,SAAS,CACxBP,WAAYA,IACZS,QAASjC,KAeXkC,aAX8B,uCAAE,sBAAApF,EAAA,6DAChC8E,QAAQC,IAAR,gBACGpF,GACDA,EAAgB0F,QAHc,mBAKzB,GALyB,2CAAF,sD,SE5BjBC,E,8EAAf,WAA8BC,GAA9B,SAAAvF,EAAA,yDAEE8E,QAAQC,IAAI,SAAUQ,EAAGzC,QAEzBgC,QAAQC,IAAI,OAAQQ,EAAGrC,KAAKsC,OACL,iBAAnBD,EAAGrC,KAAKzC,OALd,uBAOK8E,EAAGE,OAAetB,YAAY,CAC7BuB,QAAS,MACTpD,OAAQqD,EACRC,GAAIL,EAAGrC,KAAK0C,IACXL,EAAGzC,QAXV,6BAeO6B,EAAcY,EAAGrC,KAAKzC,QAf7B,uBAiBK8E,EAAGE,OAAuBtB,YAAY,CACrCuB,QAAS,MACTF,MAAO,CACLK,KAAM,MACN9C,QAAS,oBAEX6C,GAAIL,EAAGrC,KAAK0C,IACXL,EAAGzC,QAxBV,0BA6BE6B,EAAcY,EAAGrC,KAAKzC,QAAtB,MAAAkE,EAAa,YAAoBY,EAAGrC,KAAKjC,SAAQ6E,MAAK,SAACC,GACpDR,EAAGE,OAAuBtB,YAAY,CACrCuB,QAAS,MACTpD,OAAQyD,EACRH,GAAIL,EAAGrC,KAAK0C,IACXL,EAAGzC,WACLkD,OAAM,SAAC5C,GAEPmC,EAAGE,OAAetB,YAAY,CAC7BuB,QAAS,MACTF,MAAO,CACLK,KAAM,MACN9C,QAASK,EAAEL,SAEb6C,GAAIL,EAAGrC,KAAK0C,IACXL,EAAGzC,WA5CV,4C,sBAiDA,IAcemD,EAd4B,WAUzC,OARAvD,qBAAU,WAAK,4CACb,sBAAA1C,EAAA,sDACE2C,OAAOC,iBAAiB,UAAW0C,GADrC,4CADa,sBAMb,OANc,WAAD,wBAKbY,GACO,WAAMvD,OAAOwD,oBAAoB,UAAWb,OAE7C,qCCrCKc,EAZQ,kBACrB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,SAAUC,2BAAzB,UACE,cAAC,IAAD,CAAOC,KAAK,iBAAiBC,QAAS,cAACC,EAAD,MACtC,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,cCfjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAIX,c,gCCHf,kCAAO,IAmBDC,EAAiB,CACrBC,QAb6C,CAC7CC,UAAW,UACXC,QAAS,+BACTC,UAAW,kCACXC,UAAW,mCAUXC,QArB6C,CAC7CJ,UAAW,UACXC,QAAS,+BACTC,UAAW,kCACXC,UAAW,oCAoBAE,EAAsB,SAACC,GAAD,OAA2CR,EAAeQ,K,0NChB7F,IAAMC,EAAO,uCAAG,WAAOpH,GAAP,eAAAH,EAAA,sEACe4E,kBAAQ,aACnC4C,KAAM,CACJC,SAAU,IAAIC,YAAUC,6BAE1BC,QAAS,IACNP,YAAoBlH,KANX,cACR0H,EADQ,yBAQPA,GARO,2CAAH,sDAWN,SAASC,EAAkB/H,GAChC,SAAIA,GAAcA,EAAWgI,OAAS,IAClChI,EAAWiI,SAAS,WAClBjI,EAAWiI,SAAS,aAMrB,SAAS5H,EAAeyE,GAC7B,OAAGA,EAAIoD,MAAM,YAAYF,OAAS,EACzB,UAEF,UAGF,SAAeG,EAAtB,kC,4CAAO,WAAmCC,GAAnC,2BAAAnI,EAAA,6DAA+CoI,EAA/C,+BAAuE,KAAvE,kBACE,IAAIC,mBAAiBF,EAAMC,IAD7B,4C,sBAKA,IAAM1H,EAAY,uCAAG,WAC1BJ,EACAP,EACAuI,GAH0B,SAAAtI,EAAA,0DAKE,IAAxBM,EAAOC,aALe,gCAOlBD,EAAOiI,cACXxI,EACAuI,EAFI,UAGD3F,OAAOhB,UAHN,UAIDgB,OAAOhB,SAJN,kBAPkB,gCAcnBrB,EAAOkI,gBAdY,2CAAH,0DAiBlB,SAAenI,EAAtB,kC,4CAAO,WAAyBF,GAAzB,6BAAAH,EAAA,6DAA4CoI,EAA5C,+BAAoE,KAApE,SACcb,EAAQpH,GADtB,cACCgI,EADD,yBAEED,EAAoBC,EAAMC,IAF5B,4C,8FC7CHK,E,uBAYSC,G,KAAuB,uCAAG,WACrCC,EAEAC,GAHqC,iCAAA5I,EAAA,6DAKrC6I,EALqC,+BAKR,SAACC,GAAD,MAAgB,IAC7CC,EANqC,6CAAA/I,EAAA,MAMA,sBAAAA,EAAA,gFAAY,GAAZ,2CAG/BgJ,EAAqB,IAAIC,SAAQ,SAACC,EAASC,GA0B/CxG,OAAOC,iBACL,WA1Be,SAAXwG,EAAYvG,GAEhB,GAAIA,EAAMC,SAAW8F,EACnB,IACE,IAEmC,EAOA,EAT7B7F,EAAUC,KAAKC,MAAMJ,EAAMK,MAEjC,GADA2F,EAAa9F,QACWsG,IAApBtG,EAAQkB,QACA,QAAV,EAAAwE,SAAA,SAAYpD,QACZoD,EAAa,KACb9F,OAAOwD,oBAAoB,UAAUiD,GACrCF,EAAQnG,GAGV,QAAwBsG,IAApBtG,EAAQuB,QACA,QAAV,EAAAmE,SAAA,SAAYpD,QACZoD,EAAa,KACb9F,OAAOwD,oBAAoB,UAAUiD,GACrCD,EAAOpG,GAET,MAAOK,GACP0B,QAAQwE,KAAKzG,EAAMK,MACnB4B,QAAQwE,KAAKlG,OAOjB,MAtCiC,SAyCZ2F,IAzCY,cA2ClB,IA3CkB,QA2CI,IAAdJ,EAAIzG,QAC7BqH,EAAI5G,OAAO6G,KAAP,UACCZ,EADD,+CAEFS,EACA,mDAEFZ,EAAac,GAEflG,YAAW,WAAO,IAAD,EACL,QAAV,EAAAoF,SAAA,SAAYtE,YAAYnB,KAAKgB,UAAU2E,GAAvC,UAAgDC,MAC/C,KArDkC,kBAuD9BI,GAvD8B,2CAAH,0D,45BCnB9BhE,E,kDAQJ,WAAYH,GAAc,IAAD,uBACvB,gBAPKA,SAMkB,IAJlBsD,UAIkB,IAFlBpI,gBAEkB,EAEvB,EAAK8E,IAAMA,EACX,EAAK9E,WAAa,EAAK0J,cAAc5E,GACrC,IAAM1E,EAAMC,YAAeyE,GACrB6E,EAAIrC,YAAoBlH,GACxBsH,EAAW,IAAIC,YAAUC,4BANR,OAOvB,EAAKQ,KAAO,IAAIwB,OAAJ,2BAAaD,GAAb,IAAkB9B,QAAS,GAAIJ,KAAM,CAACC,eAP3B,E,iDAUzB,SAAsB5C,GACpB,OAAOA,I,4DAMT,2FAGMiD,YAAkB8B,KAAK7J,YAH7B,wDAIQ8J,EAAM,IAAIC,IAAInH,OAAOhB,SAASmB,SAE3BA,QAAQiH,MAAM,kBACvBjF,QAAQC,IAAR,yCAA8C8E,EAAI/G,SAC5C3C,EAAMC,YAAewJ,KAAK7J,YARlC,SASuBM,YAAUF,EAAIyJ,KAAK7J,YAT1C,cASQO,EATR,iBAUyBA,EAAOC,aAVhC,oDAYUmI,YACJ,CAACxG,MAAO,EAAGE,MAAO,EAAG3B,OA3CK,eA2CuBQ,OAAQ,GAAIlB,WAAY6J,KAAK7J,YAC9E8J,EAAI/G,QACJ,kBAAI,IAHuB,sBAI3B,sBAAA9C,EAAA,gFAAYM,EAAOC,cAAnB,4CAhBN,iD,mHAuBA,WAAsB2C,GAAtB,4HAAgD8G,EAAhD,+BAA8E,IAExElC,YAAkB8B,KAAK7J,YAF7B,8CAEiDsJ,GAFjD,UAGQV,EAAOzF,EAAsBiC,QACnCL,QAAQC,IAAI7B,EAAK8G,GACX7J,EAAMC,YAAewJ,KAAK7J,YAC1BH,EAASyH,YAAoBlH,GAE7B8J,EAAa,SAAChJ,GAAD,OAAoCiJ,EAAOC,KAAKnH,KAAKgB,UAAU/C,IAASmJ,SAAS,WAG9FC,EAAa,CAAEC,SAAU,cACzBC,EAZR,yBAaIC,aAAc,iBACXH,GAdP,IAeII,WAAYb,KAAK7J,WACjB2K,YAAa/B,EAAIlI,OACjBkK,YAAaV,EAAWtB,EAAI1H,WAGxB4I,EAAM,IAAIC,IAAInH,OAAOhB,SAASmB,SAE3BA,QAAQiH,MAAM,kBACL,iBAAfpB,EAAIlI,OAvBT,wBAwBUmK,EAAgB,IAAIC,gBAAcjL,EAAOqH,SACzC6D,EAAiB,IAAIC,iBAAgB,CAAEH,IACvCI,EAAY,IAAIC,SAAOH,GA1BjC,UA2B4BE,EAAU7F,QAAQ,CAAC1E,OAAQ,QAASQ,OAAOsJ,IA3BvE,YA2BUW,EA3BV,QA4BkB5I,OA5BlB,0CA4BiC4I,GA5BjC,iCA6BWC,OAAOC,OAAOF,EAAU,CAAC5I,OAAQU,KAAKC,MAAMiH,EAAOC,KAAKe,EAAU5I,QAAQ8H,eA7BrF,aAgCiCzB,EAAI1H,OAA5BG,EAhCT,EAgCSA,IAAKD,EAhCd,EAgCcA,iBACTC,IAAOD,EAjCZ,wBAkCI2D,QAAQC,IAAI4D,EAAI1H,QAlCpB,UAoCqByH,YAAwB,CAACxG,MAAM,EAAGzB,OAAOkI,EAAIlI,OAAQQ,OAAQ0H,EAAI1H,OAAQmB,MAAO,EAAGrC,WAAY6J,KAAK7J,YAAY8J,EAAI/G,QApCzI,eAoCUuI,EApCV,yBAqCWA,GArCX,eAwCQT,EAAgB,IAAIC,gBAAcjL,EAAOqH,SACzC6D,EAAiB,IAAIC,iBAAgB,CAAEH,IACvCI,EAAY,IAAIC,SAAOH,GA1C/B,UA2C0BE,EAAU7F,QAAQ,CAAC1E,OAAQ,QAASQ,OAAOsJ,IA3CrE,YA2CQW,EA3CR,QA4CgB5I,OA5ChB,0CA4C+B4I,GA5C/B,iCA6CSC,OAAOC,OAAOF,EAAU,CAAC5I,OAAQU,KAAKC,MAAMiH,EAAOC,KAAKe,EAAU5I,QAAQ8H,eA7CnF,iD,0EAiDA,gB,GAjG6BnE,aAsGhBjB,Q","file":"static/js/main.5f011513.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Connect, SendData, SendResponse } from \"../__GENERATED_TYPES__\";\nimport NearWebTransport from \"../transports/NearWebTransport\";\n\nexport interface IMethodMapping {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [methodName: string]: (...params: any) => Promise<any>;\n}\n\nlet transport: NearWebTransport | undefined;\nlet internalID = 0;\nlet transportWindow: Window;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst connect: Connect = async (uri: any) => {\n  console.log(\"transport\");\n  transport = new NearWebTransport(uri);\n  console.log(`connecting ${transport.contractId}`)\n  transportWindow = await transport.connect();\n  console.log(`connected ${transport.contractId}`)\n  return true;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst sendData: SendData = (data: any): Promise<any> => {\n  if (!transport) {\n    throw new Error(\"Not Connected\");\n  }\n  return transport.sendData({\n    internalID: internalID++,\n    request: data,\n  });\n};\n\nconst sendResponse: SendResponse =async  () => {\n  console.log(`sendResponse`)\n  if(transportWindow){\n    transportWindow.close()\n  }\n  return true\n}\n\nconst methodMapping: IMethodMapping = {\n  connect,\n  sendData,\n  sendResponse\n};\n\nexport default methodMapping;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from \"react\"\nimport {useLocation } from \"react-router-dom\";\nimport qs from \"qs\";\nimport styled from \"styled-components\"\nimport BN from \"bn.js\"\nimport { getEnvironment, getWallet, walletSignIn } from \"../lib/near\";\n\n\nexport const WALLET_AUTH_METHOD = \"__walletAuth\"\n\n// TODO this might need clean up\nconst getBaseLocation = ():string => \"http://localhost:3000\"\n\nconst config = {\n  frontendURI: getBaseLocation()\n}\n\ninterface CallbackStatus {\n  errorCode?: any\n  errorMessage?: any\n  transactionHashes? : any\n  // eslint-disable-next-line camelcase\n  public_key?: string\n}\n// Requeset parameters takes the methodName and arguments, and the component maps \n// from methodName to method to call and passes in the serialized parameters.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface RequestData {\n  method: string\n  params: any[] \n  contractId: string\n  // Total out of sequence\n  total: number\n  count: number\n}\n\n// TODO fix typings\ninterface Method {\n  method: (...x: any)=> any\n  desc: string\n}\n\nconst makeSignedIn = async (contractId: string): Promise<boolean>=> {\n  let retries = 5;\n  let signedIn = false;\n  while(retries-- && !signedIn){\n    const env = getEnvironment(contractId)\n    // eslint-disable-next-line no-await-in-loop\n    const wallet = await getWallet(env,contractId)\n    // \n    // eslint-disable-next-line no-debugger\n    signedIn = wallet.isSignedIn()\n  }\n  return signedIn || retries > 0 \n}\nconst launchWallet = async (contractId: string) => {\n   \n  const env = getEnvironment(contractId)\n  // eslint-disable-next-line no-await-in-loop\n  const wallet = await getWallet(env,contractId)\n  return walletSignIn(wallet,contractId, contractId)\n}\nconst methods: {[k: string]: Method}= {\n  \"__walletAuth\": {method: launchWallet, desc: \"Authorize contract\"}\n}\n\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 1.95rem;\n  margin-left: 20px;\n  margin-right: 20px;\n  color: black;\n`\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n`\n\nconst genericSigner= async (method:string, params: any, contractId: string) => {\n\n  const env = getEnvironment(contractId)\n  // eslint-disable-next-line no-await-in-loop\n  const wallet = await getWallet(env)\n  const copyParams = {...params}\n  \n  // eslint-disable-next-line no-param-reassign\n  delete params.attachedDeposit;\n  // eslint-disable-next-line no-param-reassign\n  delete params.gas;\n  // eslint-disable-next-line no-param-reassign\n\n  const attachedDeposit = copyParams.attachedDeposit || \"0\" \n  const gas = copyParams.gas || \"3000000\" \n  await wallet.account().functionCall({args:params,\n    contractId,\n    methodName: method,\n    attachedDeposit: new BN(attachedDeposit),\n    gas: new BN(gas)\n  })\n}\n\nconst WalletRequest: React.FunctionComponent = () => {\n  const location = useLocation();\n\n  const [method, setMethod] = useState<Method>();\n  const [methodName, setMethodName] = useState<string>(\"\");\n  const [contractId, setContractId] = useState<string>(\"\");\n  const [params, setParams] = useState<any[]>();\n  const [count, setCount] = useState<number>();\n  const [total, setTotal] = useState<number>();\n  const [result, setResult] = useState<any>()\n  const [txHash, setTxHash] = useState<string>();\n\n\n  const getParams = () =>\n    window.addEventListener(\n      \"message\",\n      (event) => {\n        if(event.origin === config.frontendURI){\n          try { \n            const message: RequestData = JSON.parse(event.data)\n            if(message.method){\n              const mthd = methods[message.method] ? methods[message.method] : {method: ()=>true, desc:\"\"};\n              setParams(message.params)\n              setMethod(mthd)\n              setContractId(message.contractId)\n              setMethodName(message.method);\n              setCount(message.count)\n              setTotal(message.total)\n            }\n          }catch(e){\n            // console.warn(e)\n          }\n        }\n      },\n      false\n    );\n\n   \n  useEffect(()=> {\n    getParams()\n  },[]);\n\n  useEffect(() => {\n    async function callMethod(){\n      if(count && total && method && params) {\n        setTimeout(async ()=>{\n          let res\n          if((params as any).attachedDeposit || (params as any).gas){\n            res = await genericSigner(methodName,params, contractId)\n          } else{\n            // TODO call walletAuth directly\n            res = await method.method(contractId)\n          }\n\n          setResult(res);\n        }, 2500)\n      }\n    }\n    callMethod()\n  })\n\n  useEffect(()=>{\n\n    async function verifyTxOrAuthorization() {\n      const parseUrl = ():CallbackStatus => qs.parse(location.search, { ignoreQueryPrefix: true })\n      const parsedUrl = parseUrl();\n\n      if(window.opener !== window && window.opener !== null && parsedUrl.transactionHashes){\n      // If this is a sequence let's prevent sending the same hash over and over\n\n        if(txHash) return\n        setTxHash(parsedUrl.transactionHashes);\n        const successMessage = JSON.stringify({success: parsedUrl.transactionHashes, value: result})\n        window.opener.postMessage(successMessage, config.frontendURI)\n        return\n      }\n\n      if(window.opener !== window && window.opener !== null && parsedUrl.public_key){\n        const res = await makeSignedIn(contractId)\n        if(res){\n          const successMessage = JSON.stringify({success: parsedUrl.public_key, value: res})\n          window.opener.postMessage(successMessage, config.frontendURI)\n        }else {\n          const failMessage = JSON.stringify({failure: { errorCode: 3272, errorMessage: \"could not sign in\"}})\n          window.opener.postMessage(failMessage, config.frontendURI)\n        }\n        return\n      }\n      if(window.opener !== window && window.opener !== null && parsedUrl.errorCode){\n        const failMessage = JSON.stringify({failure: { errorCode: parsedUrl.errorCode, errorMessage: parsedUrl.errorMessage}})\n        window.opener.postMessage(failMessage, config.frontendURI)\n      }\n    }\n    verifyTxOrAuthorization()\n  }, [location.search, result, setTxHash, txHash, contractId])\n  return (<MessageContainer>\n    {method && <Message>Loading wallet \n      to sign transaction {count} of {total} for {method && method.desc}</Message>}\n    {!method && <Message>Loading wallet </Message>}\n  </MessageContainer>)\n}\n\n\nexport default WalletRequest","import React, { useEffect } from \"react\"\nimport openrpcDocument from \"../openrpc.json\";\nimport methodMapping from \"../methods/methodMapping\";\n\n\n\nasync function messageHandler(ev: MessageEvent){\n  // eslint-disable-next-line no-console\n  console.log(\"origin\", ev.origin);\n  // eslint-disable-next-line no-console\n  console.log(\"data\", ev.data.error); \n  if (ev.data.method === \"rpc.discover\") {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ev.source as any).postMessage({\n      jsonrpc: \"2.0\",\n      result: openrpcDocument,\n      id: ev.data.id,\n    }, ev.origin);\n    return;\n  }\n\n  if (!methodMapping[ev.data.method]) {\n    // eslint-disable-next-line no-debugger\n    (ev.source as WindowProxy).postMessage({\n      jsonrpc: \"2.0\",\n      error: {\n        code: 32009,\n        message: \"Method not found\",\n      },\n      id: ev.data.id,\n    }, ev.origin);\n    \n    return;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  methodMapping[ev.data.method](...ev.data.params).then((results: any) => {\n    (ev.source as WindowProxy).postMessage({\n      jsonrpc: \"2.0\",\n      result: results,\n      id: ev.data.id,\n    }, ev.origin);\n  }).catch((e: Error) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ev.source as any).postMessage({\n      jsonrpc: \"2.0\",\n      error: {\n        code: 32329,\n        message: e.message,\n      },\n      id: ev.data.id,\n    }, ev.origin);\n  });\n}\n\n\nconst Transport: React.FunctionComponent = () => {\n  \n  useEffect(()=> {\n    async function initTransport() {\n      window.addEventListener(\"message\", messageHandler)\n    }\n    \n    initTransport()\n    return ()=> {window.removeEventListener(\"message\", messageHandler)}\n  });\n  return (<div> </div>)\n}\n\n\nexport default Transport ","import React from 'react';\n\nimport {\n  BrowserRouter,\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport GenericWallet from './pages/GenericWallet';\nimport Transport from './pages/Transport';\n\n// import WalletAuth from './pages/WalletAuth';\n\n\n// <Route path=\"/open-rpc-near-transport/walletAuth\" element={<WalletAuth />}/>\n//      <Route path=\"/open-rpc-near-transport/connect\" element={<WalletAuth />}/>\nconst App: React.VFC = () => (\n  <Router>\n    <Routes>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Route path=\"/walletSigning\" element={<GenericWallet/>}/>\n        <Route path=\"/\" element={<Transport/>}/>\n      </BrowserRouter>\n    </Routes>\n  </Router>\n)\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\nexport default {};\n","export type Environments = \"testnet\" | \"mainnet\"\n\nexport interface ConnectionConfig {\n  networkId: Environments \n  nodeUrl: string,\n  walletUrl: string,\n  helperUrl: string\n}\n\nexport const testNetConfig: ConnectionConfig = {\n  networkId: \"testnet\",\n  nodeUrl: \"https://rpc.testnet.near.org\",\n  walletUrl: \"https://wallet.testnet.near.org\",\n  helperUrl: \"https://helper.testnet.near.org\"\n}\n\nexport const mainNetConfig: ConnectionConfig = {\n  networkId: \"mainnet\",\n  nodeUrl: \"https://rpc.mainnet.near.org\",\n  walletUrl: \"https://wallet.mainnet.near.org\",\n  helperUrl: \"https://helper.mainnet.near.org\"\n}\n\nexport interface DefaultConnectionConfig {\n  mainnet: ConnectionConfig\n  testnet: ConnectionConfig\n}\n\nconst defaultConfigs = {\n  mainnet: mainNetConfig,\n  testnet: testNetConfig\n}\n\nexport const getConnectionConfig = (entry: Environments): ConnectionConfig => defaultConfigs[entry]","import { connect, keyStores, Near, WalletConnection } from \"near-api-js\";\nimport { Environments, getConnectionConfig } from \"../transports/connection\";\n\nexport async function getConnection(\n  keyStore: keyStores.BrowserLocalStorageKeyStore,\n  env: Environments,\n): Promise<Near> {\n  return connect({\n    deps: {\n      keyStore\n    },\n    ...getConnectionConfig(env),\n    headers: {}\n  });\n}\n\n\nconst getNear = async (env: Environments):Promise<Near> => {\n  const nearConnection = await connect({\n    deps: {\n      keyStore: new keyStores.BrowserLocalStorageKeyStore() \n    },\n    headers: {},\n    ...getConnectionConfig(env)\n  })\n  return nearConnection;\n};\n\nexport function isValidContractId(contractId?: string): boolean {\n  if(!contractId || contractId.length < 3  ||\n    (!contractId.endsWith(\".near\") \n    && !contractId.endsWith(\".testnet\"))){\n    return false \n  }\n  return true\n}\n\nexport function getEnvironment(uri: string): Environments {\n  if(uri.split('.testnet').length > 1){\n    return \"testnet\"\n  }\n  return \"mainnet\"\n}\n\nexport async function getWalletConnection(near: Near, appKey: string | null = null): Promise<WalletConnection> {\n  return new WalletConnection(near, appKey);\n}\n\n// TODO note this might be fragile in different context\nexport const walletSignIn = async (\n  wallet: WalletConnection,\n  contractId: string,\n  contractName: string\n): Promise<string> => {\n  if (wallet.isSignedIn() === false) {\n    // eslint-disable-next-line no-underscore-dangle\n    await wallet.requestSignIn(\n      contractId, // contract requesting access\n      contractName, // optional\n      `${window.location}`, // successs\n      `${window.location}?failure=true` // failure\n    );\n  }\n  return wallet.getAccountId();\n};\n\nexport async function getWallet(env: Environments, appKey: string | null = null): Promise<WalletConnection> {\n  const near = await getNear(env)\n  return getWalletConnection(near, appKey);\n}\n\n\nexport default getWalletConnection;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { getEnvironment, getWallet, walletSignIn } from \"./near\";\n\nexport interface ShouldOpenWindow {\n  (): Promise<boolean>;\n}\nexport interface CallbackMessage {\n  success?: any;\n  failure?: any;\n}\nexport interface CheckMessage {\n  (message: any): void;\n}\nexport interface Req {\n  method: string;\n  params: any | any[];\n  contractId: string;\n  total: number;\n  count: number;\n}\n\nlet prevWindow: Window | null;\nexport const closeSigningWindow = ():void => {\n  prevWindow?.close();\n  prevWindow = null;\n}\n\nexport const walletAuth = async (contractId: string):Promise<void> => {\n  const env = getEnvironment(contractId)\n  const wallet = await getWallet(env)     \n  await walletSignIn(wallet,contractId,contractId)\n}\n\nexport const createSigningWindowFunc = async (\n  req: Req,\n  // TODO something more rigorous for validity\n  parentPath: string,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  checkMessage: CheckMessage = (_m: string) => \"\",\n  shouldOpenWindow: ShouldOpenWindow = async () => true\n): Promise<any> => {\n  let w: Window | null;\n  const prom: Promise<any> = new Promise((resolve, reject) => {\n    const listener = (event: any) => {\n      \n      if (event.origin === parentPath) {\n        try {\n          const message = JSON.parse(event.data);\n          checkMessage(message);\n          if (message.success !== undefined) {\n            prevWindow?.close();\n            prevWindow = null;\n            window.removeEventListener('message',listener);\n            resolve(message);\n          }\n\n          if (message.failure !== undefined) {\n            prevWindow?.close();\n            prevWindow = null;\n            window.removeEventListener('message',listener);\n            reject(message);\n          }\n        } catch (e) {\n          console.warn(event.data)\n          console.warn(e);\n        }\n      }\n    }\n    window.addEventListener(\n      \"message\",\n      listener,\n      false\n    );\n  });\n  const shouldOpen = await shouldOpenWindow();\n\n  if (shouldOpen === true && req.count === 1) {\n    w = window.open(\n      `${parentPath}/open-rpc-near-transport/walletSigning`,\n      undefined,\n      \"popup=yes,left=0,top=0,width=400px,height=800px\"\n    );\n    prevWindow = w;\n  }\n  setTimeout(() => {\n    prevWindow?.postMessage(JSON.stringify(req), `${parentPath}`);\n  }, 3000);\n  \n  return prom;\n};\n","/* eslint-disable no-console */\nimport { Transport } from \"@open-rpc/client-js/build/transports/Transport\";\nimport { IJSONRPCData, JSONRPCRequestData } from \"@open-rpc/client-js/build/Request\";\nimport { Client, HTTPTransport, RequestManager } from \"@open-rpc/client-js\";\nimport {Near, keyStores} from \"near-api-js\";\nimport {getConnectionConfig } from \"./connection\";\nimport { createSigningWindowFunc } from \"../lib/reqSign\";\nimport { getEnvironment, getWallet, isValidContractId } from \"../lib/near\";\n\nexport const WALLET_AUTH_METHOD = \"__walletAuth\"\n\n\n\n\nclass NearWebTransport extends Transport {\n\n  public uri: string;\n\n  public near: Near;\n\n  public contractId: string;\n\n  constructor(uri: string) {\n    super();\n    this.uri = uri;\n    this.contractId = this.getContractId(uri)\n    const env = getEnvironment(uri)\n    const cfg=getConnectionConfig(env)\n    const keyStore = new keyStores.BrowserLocalStorageKeyStore()\n    this.near = new Near({...cfg, headers: {}, deps: {keyStore}});\n  }\n\n  private getContractId(uri: string): string{\n    return uri\n  }\n  \n\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public async connect(): Promise<any> {\n\n\n    if(!isValidContractId(this.contractId)) return\n    const url = new URL(window.location.origin)\n    // eslint-disable-next-line no-alert\n    if (!url.origin) alert(\"No origin host\")\n    console.log(`creating window with this path ${url.origin}`)\n    const env = getEnvironment(this.contractId)\n    const wallet = await getWallet(env,this.contractId)\n    const signedIn = await wallet.isSignedIn() \n    if(!signedIn){\n      await createSigningWindowFunc(\n        {count: 1, total: 1, method: WALLET_AUTH_METHOD, params: [], contractId: this.contractId}, \n        url.origin,\n        ()=>true,\n        async ()=> !wallet.isSignedIn() \n      )\n    }\n    \n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public async sendData(data: JSONRPCRequestData, timeout: number | undefined = 5000): Promise<any> {\n\n    if(!isValidContractId(this.contractId)) return undefined\n    const req = (data as IJSONRPCData).request\n    console.log(data,timeout)\n    const env = getEnvironment(this.contractId)\n    const config = getConnectionConfig(env)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types\n    const base64Args = (params: object | any[]): string => Buffer.from(JSON.stringify(params)).toString('base64')\n    // TODO note this will only allow you to do current time queries but not back in time queries aka\n    // the state at block time 100 \n    const blockQuery = { finality: 'optimistic' }\n    const encodedReq = {\n      request_type: 'call_function',\n      ...blockQuery,\n      account_id: this.contractId,\n      method_name: req.method,\n      args_base64: base64Args(req.params) \n    }\n\n    const url = new URL(window.location.origin)\n    // eslint-disable-next-line no-alert\n    if (!url.origin) alert(\"No origin host\")\n    if(req.method === \"rpc.discover\"){\n      const httpTransport = new HTTPTransport(config.nodeUrl)\n      const requestManager = new RequestManager( [ httpTransport ])\n      const rpcClient = new Client(requestManager)\n      const reqResult = await rpcClient.request({method: 'query', params:encodedReq})\n      if(!reqResult.result) return reqResult\n      return Object.assign(reqResult,{result: JSON.parse(Buffer.from(reqResult.result).toString())}) \n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const {gas, attachedDeposit} = req.params as any\n    if(gas || attachedDeposit) {\n      console.log(req.params)\n\n      const rs = await createSigningWindowFunc({count:1, method:req.method, params: req.params, total: 1, contractId: this.contractId},url.origin,)\n      return rs\n    }\n    \n    const httpTransport = new HTTPTransport(config.nodeUrl)\n    const requestManager = new RequestManager( [ httpTransport ])\n    const rpcClient = new Client(requestManager)\n    const reqResult = await rpcClient.request({method: 'query', params:encodedReq})\n    if(!reqResult.result) return reqResult\n    return Object.assign(reqResult,{result: JSON.parse(Buffer.from(reqResult.result).toString())}) \n\n  }\n\n  public close(): void {\n    // noop\n  }\n}\n\nexport default NearWebTransport;\n"],"sourceRoot":""}